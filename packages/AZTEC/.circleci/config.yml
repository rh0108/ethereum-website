version: 2.0 # use CircleCI 2.0

jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    working_directory: ~/AZTEC # directory where steps will run
    docker: # run the steps with Docker
      - image: circleci/node:8.11.3
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory
      - run:
          name: "Update NPM"
          command: 'sudo npm install -g npm@5.6.0'
      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: "Pull Submodules"
          command: git submodule update --init --recursive
      - run:
          name: "Remove Package Lock"
          command: rm -f package-lock.json
      - run:
          name: "Install Node Modules"
          command: |
            npm install
            npm install ./aztec-crypto-js
            npm install ./aztec-demo-js 
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run: # run ethereum node
          name: "Start Ethereum Node"
          command: |
            ./node_modules/.bin/ganache-cli -i 1234 -p 8545 &
            sleep 10
      - run: # deploy contracts
          name: "Deploy Contracts"
          command: ./node_modules/.bin/truffle migrate --network development
      - run: # run tests
          name: "Test AZTEC"
          command: INFURA_API_KEY=$INFURA_API_KEY PRIVATE_KEY=$PRIVATE_KEY MNEMONIC=$MNEMONIC npm run test
      - run: # run crypto tests
          name: "Test Crypto"
          command: |
            cd aztec-crypto-js
            npm run test
            cd ../
      - run: # run demo tests
          name: "Test Demo"
          command: |
            cd aztec-demo-js
            cp -r ../build/contracts/ ./contracts/
            npm run test
            cd ../
